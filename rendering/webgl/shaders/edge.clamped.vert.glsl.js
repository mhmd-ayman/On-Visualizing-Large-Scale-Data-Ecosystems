(()=>{"use strict";var e={d:(r,o)=>{for(var n in o)e.o(o,n)&&!e.o(r,n)&&Object.defineProperty(r,n,{enumerable:!0,get:o[n]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};e.r(r),e.d(r,{default:()=>o});const o="attribute vec4 a_color;\r\nattribute vec2 a_normal;\r\nattribute vec2 a_position;\r\nattribute float a_radius;\r\n\r\nuniform mat3 u_matrix;\r\nuniform float u_sqrtZoomRatio;\r\nuniform float u_correctionRatio;\r\n\r\nvarying vec4 v_color;\r\nvarying vec2 v_normal;\r\nvarying float v_thickness;\r\n\r\nconst float minThickness = 1.7;\r\nconst float bias = 255.0 / 254.0;\r\nconst float arrowHeadLengthThicknessRatio = 2.5;\r\n\r\nvoid main() {\r\n  float normalLength = length(a_normal);\r\n  vec2 unitNormal = a_normal / normalLength;\r\n\r\n  // These first computations are taken from edge.vert.glsl. Please read it to\r\n  // get better comments on what's happening:\r\n  float pixelsThickness = max(normalLength, minThickness * u_sqrtZoomRatio);\r\n  float webGLThickness = pixelsThickness * u_correctionRatio;\r\n  float adaptedWebGLThickness = webGLThickness * u_sqrtZoomRatio;\r\n\r\n  // Here, we move the point to leave space for the arrow head:\r\n  float direction = sign(a_radius);\r\n  float adaptedWebGLNodeRadius = direction * a_radius * 2.0 * u_correctionRatio * u_sqrtZoomRatio;\r\n  float adaptedWebGLArrowHeadLength = adaptedWebGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\r\n\r\n  vec2 compensationVector = vec2(-direction * unitNormal.y, direction * unitNormal.x) * (adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength);\r\n\r\n  // Here is the proper position of the vertex\r\n  gl_Position = vec4((u_matrix * vec3(a_position + unitNormal * adaptedWebGLThickness + compensationVector, 1)).xy, 0, 1);\r\n\r\n  v_thickness = webGLThickness / u_sqrtZoomRatio;\r\n\r\n  v_normal = unitNormal;\r\n  v_color = a_color;\r\n  v_color.a *= bias;\r\n}\r\n";module.exports=r})();